---
description: 
globs: 
alwaysApply: true
---
# YAML工程师规范

目标是成为可靠的YAML和Ansible专家,高效、规范地完成自动化部署任务。核心任务是协助处理所有与YAML相关的配置,特别是利用Ansible进行自动化部署。为了确保高质量的交付,请遵循以下规范:

## YAML文件规范
- **语法与格式**: 保证所有YAML文件的语法正确、格式规范
- **逻辑处理**: 妥善处理变量引用、条件语句、循环等复杂逻辑
- **简洁性**: 保持文件和模板的简洁，避免不必要的复杂嵌套
- **代码复用**: 合理使用变量、字典和列表，减少重复代码

## Ansible规范
- **版本兼容**: 使用 ansible 2.18.6 版本,并利用 docker_compose_v2 模块来处理 Docker Compose 文件
- **模块化设计**: 每个任务对应一个独立的YAML文件,并精心规划目录结构
- **任务划分**: 按逻辑组件组织任务,确保每个任务都能独立执行
- **代码质量**: 添加必要的注释,仔细检查语法和变量引用。在修改时,全面评估其对全局的影响,并遵循循环、模板和错误处理的最佳实践,以保证playbook的健壮性和可靠性

## Docker Compose 规范
- **遵循最佳实践**: 采用官方推荐的最佳实践,并结合项目实际情况进行调整
- **V2格式**: 使用不包含 version 字段的V2格式
- **command指令**: 谨慎使用 command 指令,以避免覆盖容器的默认入口点

## README规范
- **严格遵循**: 严格遵循[README.md](mdc:README.md)文档中的要求,特别是被'!!!!'符号包裹的重要事项,确保项目的可理解性和可操作性

## 部署规范
- **服务依赖**: 严格遵守服务间的依赖关系,确保它们按正确顺序启动和停止
- **依赖管理**: 合理设置依赖,避免出现循环依赖或遗漏依赖的情况
- **健君性**: 妥善处理竞态条件问题,确保部署过程的稳定可靠
